#! /usr/bin/python3
# -*- coding: utf-8 -*-

__author__ = 'Dieter Vansteenwegen'
__project__ = 'Novastar_MCTRL300_basic_controller'
__project_link__ = 'https://github.com/dietervansteenwegen/Novastar_MCTRL300_basic_controller'

import logging
import os
import pathlib

from PyQt5 import QtCore, QtGui, QtWidgets

base = os.path.dirname(__file__)
base = pathlib.Path(base).parent.parent
print(f'{base=}')
logo_location = os.path.join(base, 'assets', 'include', 'logo.png')
print(f'{logo_location=}')


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.log = logging.getLogger(__name__)
        self.log.debug('Start setupUi')
        MainWindow.setObjectName('MainWindow')
        MainWindow.resize(721, 401)
        MainWindow.setWindowTitle('Novastar MCTRL300 basic controller')
        icon = QtGui.QIcon()
        icon.addPixmap(
            QtGui.QPixmap(os.path.join(base, 'assets', 'include', 'logo.png')),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName('centralwidget')
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(80, 20, 241, 241))
        self.verticalLayoutWidget_2.setObjectName('verticalLayoutWidget_2')
        self._create_serial_port_block()
        self._create_output_block()
        self._create_controls_block()
        self._create_statusbar(MainWindow)
        self._create_menu(MainWindow)
        MainWindow.setCentralWidget(self.centralwidget)
        # QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.log.debug('setupUi finished.')

    def _create_serial_port_block(self):
        self.v_layout_port = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.v_layout_port.setContentsMargins(0, 0, 0, 0)
        self.v_layout_port.setObjectName('v_layout_port')
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily('DejaVu Sans')
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setText('Select serial port to controller:')
        self.label_2.setObjectName('label_2')
        self.v_layout_port.addWidget(self.label_2)
        self.lst_serial_ports = QtWidgets.QListWidget(self.verticalLayoutWidget_2)
        self.lst_serial_ports.setObjectName('lst_serial_ports')
        self.v_layout_port.addWidget(self.lst_serial_ports)
        self.btn_serial_open = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.btn_serial_open.setText('Open selected port')
        self.btn_serial_open.setCheckable(True)
        self.btn_serial_open.setObjectName('btn_serial_open')
        self.v_layout_port.addWidget(self.btn_serial_open)
        self.btn_serial_refresh = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.btn_serial_refresh.setObjectName('btn_serial_refresh')
        self.btn_serial_refresh.setText('Refresh ports list')
        self.v_layout_port.addWidget(self.btn_serial_refresh)
        self.lbl_serial_status = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.lbl_serial_status.setFrameShape(QtWidgets.QFrame.Box)
        self.lbl_serial_status.setText('No port')
        self.lbl_serial_status.setTextFormat(QtCore.Qt.PlainText)
        self.lbl_serial_status.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_serial_status.setObjectName('lbl_serial_status')
        self.v_layout_port.addWidget(self.lbl_serial_status)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(80, 265, 241, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName('line')

    def _create_output_block(self):
        self.verticalLayoutWidget_4 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_4.setGeometry(QtCore.QRect(80, 280, 241, 61))
        self.verticalLayoutWidget_4.setObjectName('verticalLayoutWidget_4')
        self.v_layout_output = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_4)
        self.v_layout_output.setContentsMargins(0, 0, 0, 0)
        self.v_layout_output.setObjectName('v_layout_output')
        self.lbl_output_port = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_output_port.setFont(font)
        self.lbl_output_port.setObjectName('lbl_output_port')
        self.v_layout_output.addWidget(self.lbl_output_port)
        self.cmb_output = QtWidgets.QComboBox(self.verticalLayoutWidget_4)
        self.cmb_output.setMinimumSize(QtCore.QSize(0, 20))
        self.cmb_output.setToolTipDuration(5)
        self.cmb_output.setEditable(False)
        self.cmb_output.setCurrentText('')
        self.cmb_output.setMaxVisibleItems(2)
        self.cmb_output.setObjectName('cmb_output')
        self.lbl_output_port.setText('Screen connected to:')
        self.cmb_output.setToolTip('Select which output screen is connected to')
        self.cmb_output.addItems(['No screen', 'Output 1', 'Output 2'])
        self.cmb_output.setCurrentIndex(0)
        self.v_layout_output.addWidget(self.cmb_output)
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setGeometry(QtCore.QRect(330, 20, 21, 321))
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName('line_2')

    def _create_controls_block(self):
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(390, 30, 281, 241))
        self.horizontalLayoutWidget_2.setObjectName('horizontalLayoutWidget_2')
        self.h_layout_settings = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.h_layout_settings.setContentsMargins(0, 0, 0, 0)
        self.h_layout_settings.setObjectName('h_layout_settings')
        self.HLayoutSettings_dummy = QtWidgets.QHBoxLayout()
        self.HLayoutSettings_dummy.setObjectName('HLayoutSettings_dummy')
        self.sldr_brightness = QtWidgets.QSlider(self.horizontalLayoutWidget_2)
        self.sldr_brightness.setMinimumSize(QtCore.QSize(70, 0))
        self.sldr_brightness.setCursor(QtGui.QCursor(QtCore.Qt.ClosedHandCursor))
        self.sldr_brightness.setMaximum(255)
        self.sldr_brightness.setProperty('value', 255)
        self.sldr_brightness.setOrientation(QtCore.Qt.Vertical)
        self.sldr_brightness.setObjectName('sldr_brightness')
        self.HLayoutSettings_dummy.addWidget(self.sldr_brightness)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName('verticalLayout_3')
        self.lbl_brightness = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.lbl_brightness.setMaximumSize(QtCore.QSize(16777215, 20))
        self.lbl_brightness.setBaseSize(QtCore.QSize(0, 20))
        self.lbl_brightness.setText('Brightness:')
        self.lbl_brightness.setObjectName('lbl_brightness')
        self.verticalLayout_3.addWidget(self.lbl_brightness)
        self.lbl_brightness_value = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.lbl_brightness_value.setMaximumSize(QtCore.QSize(16777215, 20))
        self.lbl_brightness_value.setBaseSize(QtCore.QSize(0, 20))
        self.lbl_brightness_value.setText('Unknown')
        self.lbl_brightness_value.setObjectName('lbl_brightness_value')
        self.verticalLayout_3.addWidget(self.lbl_brightness_value)
        self.HLayoutSettings_dummy.addLayout(self.verticalLayout_3)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName('verticalLayout')
        self.label = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.label.setMaximumSize(QtCore.QSize(16777215, 20))
        self.label.setText('Input/pattern:')
        self.label.setObjectName('label')
        self.verticalLayout.addWidget(self.label)
        self.btn_normal = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.btn_normal.setText('Live (input)')
        self.btn_normal.setObjectName('btn_normal')
        self.verticalLayout.addWidget(self.btn_normal)
        self.btn_red = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.btn_red.setText('Red')
        self.btn_red.setObjectName('btn_red')
        self.verticalLayout.addWidget(self.btn_red)
        self.btn_green = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.btn_green.setText('Green')
        self.btn_green.setObjectName('btn_green')
        self.verticalLayout.addWidget(self.btn_green)
        self.btn_blue = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.btn_blue.setText('Blue')
        self.btn_blue.setObjectName('btn_blue')
        self.verticalLayout.addWidget(self.btn_blue)
        self.btn_white = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.btn_white.setText('White')
        self.btn_white.setObjectName('btn_white')
        self.verticalLayout.addWidget(self.btn_white)
        self.btn_slash = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.btn_cycle_colors = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.btn_cycle_colors.setText('Cycle colors')
        self.btn_cycle_colors.setObjectName('btn_cycle_colors')
        self.verticalLayout.addWidget(self.btn_cycle_colors)
        self.btn_slash.setText('Slash')
        self.btn_slash.setObjectName('btn_slash')
        self.verticalLayout.addWidget(self.btn_slash)
        self.btn_blackout = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.btn_blackout.setText('Blackout')
        self.btn_blackout.setObjectName('btn_blackout')
        self.verticalLayout.addWidget(self.btn_blackout)
        self.btn_freeze = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.btn_freeze.setText('Freeze')
        self.btn_freeze.setObjectName('btn_freeze')
        self.verticalLayout.addWidget(self.btn_freeze)
        self.HLayoutSettings_dummy.addLayout(self.verticalLayout)
        self.h_layout_settings.addLayout(self.HLayoutSettings_dummy)
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(30, 0, 41, 61))
        font = QtGui.QFont()
        font.setFamily('DejaVu Sans')
        font.setPointSize(20)
        self.label_4.setFont(font)
        self.label_4.setText('(1)')
        self.label_4.setObjectName('label_4')
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(30, 270, 41, 61))
        font = QtGui.QFont()
        font.setFamily('DejaVu Sans')
        font.setPointSize(20)
        self.label_5.setFont(font)
        self.label_5.setText('(2)')
        self.label_5.setObjectName('label_5')
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(360, 120, 41, 61))
        font = QtGui.QFont()
        font.setFamily('DejaVu Sans')
        font.setPointSize(20)
        self.label_6.setFont(font)
        self.label_6.setText('(3)')
        self.label_6.setObjectName('label_6')

    def _create_menu(self, MainWindow):
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 721, 20))
        self.menubar.setObjectName('menubar')
        MainWindow.setMenuBar(self.menubar)

        self._add_pattern_menu(MainWindow)
        self._add_brightness_menu(MainWindow)

        self.menu_help = QtWidgets.QMenu(self.menubar)
        self.menu_help.setObjectName('menu_help')
        self.menu_help.setTitle('&Help')
        self.menu_show_logs = QtWidgets.QAction(MainWindow)
        self.menu_show_logs.setShortcut('Ctrl+Shift+L')
        self.menu_show_logs.setObjectName('menu_show_logs')
        self.menu_show_logs.setText('&Show logs')
        self.menu_help.addAction(self.menu_show_logs)
        self.menu_about = QtWidgets.QAction(MainWindow)
        self.menu_about.setShortcut('Ctrl+Shift+A')
        self.menu_about.setObjectName('menu_about')
        self.menu_about.setText('&About')
        self.menu_help.addAction(self.menu_about)
        self.menubar.addAction(self.menu_help.menuAction())

    def _add_brightness_menu(self, MainWindow):
        self.menubar_brightness = QtWidgets.QMenu(self.menubar)
        self.menubar_brightness.setTitle('Brightness')
        self.menubar.addAction(self.menubar_brightness.menuAction())

        self.set_1_pct = QtWidgets.QAction(MainWindow)
        self.set_1_pct.setShortcut('1')
        self.set_1_pct.setText('1%')
        self.menubar_brightness.addAction(self.set_1_pct)

        self.set_5_pct = QtWidgets.QAction(MainWindow)
        self.set_5_pct.setShortcut('2')
        self.set_5_pct.setText('5%')
        self.menubar_brightness.addAction(self.set_5_pct)

        self.set_100_pct = QtWidgets.QAction(MainWindow)
        self.set_100_pct.setShortcut('0')
        self.set_100_pct.setText('100%')
        self.menubar_brightness.addAction(self.set_100_pct)

    def _add_pattern_menu(self, MainWindow):
        self.menubar_pattern = QtWidgets.QMenu(self.menubar)
        self.menubar_pattern.setTitle('&Patterns')
        self.menubar.addAction(self.menubar_pattern.menuAction())

        self.set_normal = QtWidgets.QAction(MainWindow)
        self.set_normal.setShortcut('n')
        self.set_normal.setText('&Normal/Live')
        self.menubar_pattern.addAction(self.set_normal)

        self.set_red = QtWidgets.QAction(MainWindow)
        self.set_red.setShortcut('r')
        self.set_red.setText('&Red')
        self.menubar_pattern.addAction(self.set_red)

        self.set_green = QtWidgets.QAction(MainWindow)
        self.set_green.setShortcut('g')
        self.set_green.setText('&Green')
        self.menubar_pattern.addAction(self.set_green)

        self.set_blue = QtWidgets.QAction(MainWindow)
        self.set_blue.setShortcut('b')
        self.set_blue.setText('&Blue')
        self.menubar_pattern.addAction(self.set_blue)

        self.set_white = QtWidgets.QAction(MainWindow)
        self.set_white.setShortcut('w')
        self.set_white.setText('&White')
        self.menubar_pattern.addAction(self.set_white)

        self.set_cycle_colors = QtWidgets.QAction(MainWindow)
        self.set_cycle_colors.setShortcut('c')
        self.set_cycle_colors.setText('&Cycle colors')
        self.menubar_pattern.addAction(self.set_cycle_colors)

        self.set_slash = QtWidgets.QAction(MainWindow)
        self.set_slash.setShortcut('s')
        self.set_slash.setText('&Slash')
        self.menubar_pattern.addAction(self.set_slash)

        # self.set_blackout = QtWidgets.QAction(MainWindow)
        # self.set_blackout.setShortcut('Ctrl+l')
        # self.set_blackout.setText('B&lackout')
        # self.menubar_pattern.addAction(self.set_blackout)

        self.set_freeze = QtWidgets.QAction(MainWindow)
        self.set_freeze.setShortcut('Ctrl+f')
        self.set_freeze.setText('&Freeze')
        self.menubar_pattern.addAction(self.set_freeze)

    def _create_statusbar(self, MainWindow):
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName('statusbar')
        MainWindow.setStatusBar(self.statusbar)
